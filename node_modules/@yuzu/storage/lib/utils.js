import _ from "underscore";

export var copy = source => JSON.parse(JSON.stringify(source));

export var propertyOf = obj => (prop) => obj[prop];

export var pairIt = key => [key, key];

export var beforeWrap = (fnToWrap, fnToCallBefore) => _.wrap(fnToWrap, (fn, ...args) => {
    fnToCallBefore();
    return fn(...args);
});

export function nullEmitter(md) {
    ["on", "off", "once"].forEach(fn => md[fn] = _.noop);
    return _.noop;
}

var isTrue = () => true;

export function bubbleUp(source, publish, predicate = isTrue) {
    return source.onMatch("*", (...args) => {
        if (predicate(...args)) {
            publish(...args);
        }
    });
}

export function bubbleUpMD(md, publish, predicate) {
    var off = bubbleUp(md, publish, predicate);
    md.once("removed", off);
}
