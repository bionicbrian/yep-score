"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _underscore = require("underscore");

var _underscore2 = _interopRequireDefault(_underscore);

var _pubitAsPromised = require("pubit-as-promised");

var _makeValueType = require("./makeValueType");

var _makeValueType2 = _interopRequireDefault(_makeValueType);

var StoreitValue = (function () {
    function StoreitValue(store, properties) {
        _classCallCheck(this, StoreitValue);

        this._publish = (0, _pubitAsPromised.makeEmitter)(this, ["changed", "removed"]); // on/off/once mixed in.
        this._store = store;
        var primaryKey = store.options.primaryKey;

        if (!(primaryKey in properties)) {
            throw new Error("StoreitValue creation failed! Missing primary key in properties.");
        }

        this._primaryKeyName = primaryKey;
        this._key = properties[primaryKey];

        // Populate store with values if provided.
        if (Object.keys(properties).length > 1) {
            this._store.set(properties);
        }

        this._onModified = this._publishChangedIfValueModified.bind(this);
        this._onRemoved = this._unsubscribeToStoreIfRemoved.bind(this);
        this.on = _underscore2["default"].wrap(this.on, this._ensureListening.bind(this));
        this.once = _underscore2["default"].wrap(this.once, this._ensureListening.bind(this));
        this._startOnce = _underscore2["default"].once(this._start.bind(this));
    }

    _createClass(StoreitValue, [{
        key: "_ensureListening",
        value: function _ensureListening(originalFn) {
            this._startOnce();

            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
            }

            return originalFn.apply(undefined, args);
        }

        // Listen for store changes involving this value.
    }, {
        key: "_start",
        value: function _start() {
            this._store.on("modified", this._onModified);
            this._store.on("removed", this._onRemoved);
        }
    }, {
        key: "has",
        value: function has(prop) {
            var value = this._getFromStore();
            return value && prop in value;
        }
    }, {
        key: "get",
        value: function get(prop) {
            var value = this._getFromStore();
            return value && prop in value ? value[prop] : undefined;
        }
    }, {
        key: "set",
        value: function set() {
            var update;

            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                args[_key2] = arguments[_key2];
            }

            if (args.length === 1) {
                update = args[0];
            } else {
                var prop = args[0];
                var value = args[1];

                update = _defineProperty({}, prop, value);
            }
            return this._store.set(this._key, update);
        }
    }, {
        key: "toObject",
        value: function toObject() {
            return this.isStored ? this._getFromStore() : _defineProperty({}, this._primaryKeyName, this.key);
        }
    }, {
        key: "dispose",
        value: function dispose() {
            this._store.off("modified", this._onModified);
            this._store.off("removed", this._onRemoved);
        }
    }, {
        key: "_getFromStore",
        value: function _getFromStore() {
            return this.isStored ? this._store.get(this._key) : undefined;
        }
    }, {
        key: "_publishChangedIfValueModified",
        value: function _publishChangedIfValueModified(value, key) {
            if (key === this._key) {
                this._publish("changed", value);
            }
        }
    }, {
        key: "_unsubscribeToStoreIfRemoved",
        value: function _unsubscribeToStoreIfRemoved(value, key) {
            if (key === this._key) {
                this._publish("removed");
                this.dispose();
            }
        }
    }, {
        key: "key",
        get: function get() {
            return this._key;
        }
    }, {
        key: "store",
        get: function get() {
            return this._store;
        }
    }, {
        key: "isStored",
        get: function get() {
            return this._store.has(this._key);
        }
    }], [{
        key: "extend",
        value: function extend(typeOptions) {
            return (0, _makeValueType2["default"])(StoreitValue, typeOptions);
        }
    }]);

    return StoreitValue;
})();

exports["default"] = StoreitValue;
module.exports = exports["default"];